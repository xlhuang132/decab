from yacs.config import CfgNode as CN

_C = CN()
_C.LOCAL_RANK=0
_C.FINETUNE_STEP=50000
_C.MISC = CN()
_C.MISC.LOG_CLASSWISE = True

# Model
_C.MODEL = CN()
_C.MODEL.NAME = "WRN"
_C.MODEL.WIDTH = 2
_C.MODEL.NUM_CLASSES = 10
_C.MODEL.EMA_DECAY = 0.999
_C.MODEL.EMA_WEIGHT_DECAY = 0.0
_C.MODEL.WITH_ROTATION_HEAD = False
_C.MODEL.DUAL_HEAD_ENABLE=False
_C.MODEL.DUAL_HEAD_OUT_DIM=0
_C.MODEL.PROJECT_FEATURE_DIM=128

# Feature Queue for DASO and USADTM
_C.MODEL.QUEUE = CN()
_C.MODEL.QUEUE.MAX_SIZE = 256
_C.MODEL.QUEUE.FEAT_DIM = 128

# Losses
_C.MODEL.LOSS = CN()
_C.MODEL.LOSS.LABELED_LOSS = "CrossEntropyLoss"
_C.MODEL.LOSS.LABELED_LOSS_CLASS_WEIGHT_TYPE= "None"
_C.MODEL.LOSS.WARMUP_LABELED_LOSS_CLASS_WEIGHT_TYPE="None"
_C.MODEL.LOSS.WITH_LABELED_COST_SENSITIVE = False
_C.MODEL.LOSS.FEATURE_LOSS=CN()
_C.MODEL.LOSS.FEATURE_LOSS.TEMPERATURE=1.
_C.MODEL.LOSS.FEATURE_LOSS.WEIGHT=1.
_C.MODEL.LOSS.FEATURE_LOSS.CENTER_DECAY_RATIO=0.1 
_C.MODEL.LOSS.FEATURE_LOSS.OOD_LOSS_WEIGHT=1.
_C.MODEL.LOSS.FEATURE_LOSS.ID_LOSS_WEIGHT=1.

_C.MODEL.LOSS.UNLABELED_LOSS = "CrossEntropyLoss"
_C.MODEL.LOSS.UNLABELED_LOSS_WEIGHT = 1.0  #
_C.MODEL.LOSS.WITH_SUPPRESSED_CONSISTENCY = False 

# Cross Entropy
_C.MODEL.LOSS.CROSSENTROPY = CN()
_C.MODEL.LOSS.CROSSENTROPY.USE_SIGMOID = False

_C.MODEL.OPTIMIZER = CN()
_C.MODEL.OPTIMIZER.TYPE = "SGD"
_C.MODEL.OPTIMIZER.BASE_LR = 0.03
_C.MODEL.OPTIMIZER.MOMENTUM = 0.9
_C.MODEL.OPTIMIZER.WEIGHT_DECAY = 1e-4


_C.MODEL.LR_SCHEDULER = CN()
_C.MODEL.LR_SCHEDULER.TYPE = "multistep"
_C.MODEL.LR_SCHEDULER.LR_STEP = [40, 50]
_C.MODEL.LR_SCHEDULER.LR_FACTOR = 0.1
_C.MODEL.LR_SCHEDULER.WARM_EPOCH = 5
_C.MODEL.LR_SCHEDULER.COSINE_DECAY_END = 0
 

# Algorithm
_C.ALGORITHM = CN()

# # MixMatch
_C.ALGORITHM.MIXMATCH = CN()
_C.ALGORITHM.MIXMATCH.NUM_AUG = 2
_C.ALGORITHM.MIXMATCH.TEMPERATURE = 0.5
_C.ALGORITHM.MIXMATCH.MIXUP_ALPHA = 0.75
_C.ALGORITHM.MIXMATCH.APPLY_DASO = False

# # FixMatch
_C.ALGORITHM.FIXMATCH = CN()

# DASO
_C.ALGORITHM.DASO = CN()
_C.ALGORITHM.DASO.WARMUP_EPOCH=10
_C.ALGORITHM.DASO.PROTO_TEMP = 0.05
_C.ALGORITHM.DASO.PL_DIST_UPDATE_PERIOD = 100

# pseudo-label mixup
_C.ALGORITHM.DASO.WITH_DIST_AWARE = True
_C.ALGORITHM.DASO.DIST_TEMP = 1.0
_C.ALGORITHM.DASO.INTERP_ALPHA = 0.5
_C.ALGORITHM.DASO.WARMUP_ITER=5000
# prototype option
_C.ALGORITHM.DASO.QUEUE_SIZE = 256

# Semantic Alignment loss
_C.ALGORITHM.DASO.PSA_LOSS_WEIGHT = 1.0

# # CReST
_C.ALGORITHM.CREST = CN()
_C.ALGORITHM.CREST.GEN_PERIOD_EPOCH = 50  # MAX_EPOCH/GEN_PEROID_EPOCH = N gen
_C.ALGORITHM.CREST.ALPHA = 3.0
_C.ALGORITHM.CREST.TMIN = 0.5
_C.ALGORITHM.CREST.PROGRESSIVE_ALIGN = False

# OpenMatch
_C.ALGORITHM.OPENMATCH=CN() 
_C.ALGORITHM.OPENMATCH.LAMBDA_OEM=1.
_C.ALGORITHM.OPENMATCH.LAMBDA_SOCR=1. # temperature scaling
_C.ALGORITHM.OPENMATCH.MU=2. # smoothing loss weight 
_C.ALGORITHM.OPENMATCH.START_FIX=10
_C.ALGORITHM.OPENMATCH.T=1.

# DeCAB
_C.ALGORITHM.DeCAB = CN() 
_C.ALGORITHM.DeCAB.WARMUP_EPOCH=5
_C.ALGORITHM.DeCAB.LAMBDA_D = 1.   
_C.ALGORITHM.DeCAB.DeCAB_CONTRA_TEMPERTURE=0.07 

# dataset
_C.DATASET = CN()
_C.DATASET.BUILDER = "build_cifar10_dataset"
_C.DATASET.NAME = "cifar10" 
_C.DATASET.ROOT = "./data"

#  
_C.DATASET.SAMPLER=CN()
_C.DATASET.SAMPLER.NAME = "RandomSampler"
_C.DATASET.SAMPLER.BETA = 0.999 

_C.DATASET.RESOLUTION = 32
_C.DATASET.BATCH_SIZE = 64 
_C.DATASET.NUM_WORKERS = 8
_C.DATASET.DOMAIN_DATASET_RETURN_INDEX=False
_C.DATASET.UNLABELED_DATASET_RETURN_INDEX=False
_C.DATASET.LABELED_DATASET_RETURN_INDEX=False
_C.DATASET.DL=CN()
_C.DATASET.DL.INCLUDE_ALL=False
_C.DATASET.GROUP_SPLITS=[3,3,4]
_C.DATASET.IMB_TYPE='exp'
_C.DATASET.DL.NUM_LABELED_HEAD = 1500
_C.DATASET.DL.IMB_FACTOR_L = 100
_C.DATASET.DU=CN()
_C.DATASET.DU.TOTAL_NUM=10000
_C.DATASET.DU.UNLABELED_BATCH_RATIO=2
_C.DATASET.DU.ID=CN()
_C.DATASET.DU.ID.NUM_UNLABELED_HEAD = 3000
_C.DATASET.DU.ID.IMB_FACTOR_UL = 100
_C.DATASET.DU.ID.REVERSE_UL_DISTRIBUTION = False
_C.DATASET.DU.ID.INCLUDE_ALL = False

_C.DATASET.DU.OOD=CN()
_C.DATASET.DU.OOD.ENABLE=False
_C.DATASET.DU.OOD.DATASET=''
_C.DATASET.DU.OOD.ROOT='./data'
_C.DATASET.DU.OOD.INCLUDE_ALL=False
_C.DATASET.NUM_CLASSES=10
_C.SAVE_EPOCH=100
_C.MAX_EPOCH=500 
_C.VAL_ITERATION=500
_C.SHOW_STEP=20
_C.TRAIN_STEP=100 
 
# transform parameters
_C.DATASET.TRANSFORM = CN()
_C.DATASET.TRANSFORM.UNLABELED_STRONG_AUG = True
_C.DATASET.TRANSFORM.LABELED_STRONG_AUG = False
_C.DATASET.TRANSFORM.STRONG_AUG = True

_C.DATASET.NUM_VALID=5000 
_C.DATASET.REVERSE_UL_DISTRIBUTION=False

_C.OUTPUT_DIR = "outputs"
_C.RESUME = '' 
_C.EVAL_ON_TEST_SET = True
_C.GPU_ID = 0

# Reproducability
_C.SEED = 7
_C.CUDNN_DETERMINISTIC = True
_C.CUDNN_BENCHMARK = False

_C.GPU_MODE=True
def update_config(cfg, args):
    cfg.defrost()
    cfg.merge_from_file(args.cfg)
    cfg.merge_from_list(args.opts)

    cfg.freeze()
